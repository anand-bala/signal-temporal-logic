---
# NOTE there must be no spaces before the '-', so put the comma last.
Checks: '
bugprone-*,
cppcoreguidelines-*,
-cppcoreguidelines-owning-memory,
-cppcoreguidelines-pro-type-cstyle-cast,
-cppcoreguidelines-pro-type-reinterpret-cast,
-cppcoreguidelines-pro-type-static-cast-downcast,
-cppcoreguidelines-special-member-functions,
hicpp-exception-baseclass,
hicpp-avoid-goto,
modernize-*,
-modernize-use-trailing-return-type,
performance-*,
-performance-noexcept-move-constructor,
readability-avoid-const-params-in-decls
readability-braces-around-statements
readability-const-return-type
readability-container-size-empty
readability-deleted-default
readability-else-after-return
readability-function-cognitive-complexity
readability-function-size
readability-identifier-naming
readability-isolate-declaration
readability-make-member-function-const
readability-non-const-parameter
readability-qualified-auto
readability-redundant-access-specifiers
readability-redundant-control-flow
readability-redundant-declaration
readability-redundant-smartptr-get
readability-redundant-string-cstr
readability-redundant-string-init
readability-simplify-boolean-expr
readability-simplify-subscript-expr
readability-string-compare
readability-uniqueptr-delete-release
  '
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,       value: lower_case }
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m_         }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,        value: lower_case }
  - { key: readability-identifier-naming.VariableCase,        value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
  - { key: bugprone-argument-comment.CommentBoolLiterals,     value: true       }
  - { key: bugprone-argument-comment.CommentIntegerLiterals,  value: true       }
  - { key: bugprone-argument-comment.CommentFloatLiterals,    value: true       }
  - { key: bugprone-argument-comment.CommentNullPtrs,         value: true       }
FormatStyle: 'file'
...
